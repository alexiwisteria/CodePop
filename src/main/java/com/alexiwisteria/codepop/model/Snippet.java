package com.alexiwisteria.codepop.model;

import jakarta.persistence.*;
import java.time.LocalDateTime;

/**
 * Entity class representing a code snippet.
 * <p>
 * This class is mapped to a database table, storing details about individual
 * code snippets, including metadata such as creation and update timestamps.
 * </p>
 *
 * <p>
 * Fields include an autogenerated ID, title, code content, programming language,
 * creation date, and update date.
 * </p>
 *
 * @version 1.0
 */
@Entity
public class Snippet {

    @Id
    @GeneratedValue(strategy = GenerationType.IDENTITY)
    private Long id;

    private String title;
    private String code;
    private String language;

    @Column(updatable = false)
    private LocalDateTime createdAt;

    private LocalDateTime updatedAt;

    // Getters and Setters

    /**
     * Gets the unique identifier for this snippet.
     *
     * @return the ID of the snippet
     */
    public Long getId() {
        return id;
    }

    /**
     * Sets the unique identifier for this snippet.
     * <p>
     * This should generally only be set by the persistence framework.
     * </p>
     *
     * @param id the ID to set
     */
    public void setId(Long id) {
        this.id = id;
    }

    /**
     * Gets the title of this snippet.
     *
     * @return the title of the snippet
     */
    public String getTitle() {
        return title;
    }

    /**
     * Sets the title of this snippet.
     *
     * @param title the title to set
     */
    public void setTitle(String title) {
        this.title = title;
    }

    /**
     * Gets the code content of this snippet.
     *
     * @return the code content
     */
    public String getCode() {
        return code;
    }

    /**
     * Sets the code content of this snippet.
     *
     * @param code the code to set
     */
    public void setCode(String code) {
        this.code = code;
    }

    /**
     * Gets the programming language of this snippet.
     *
     * @return the programming language
     */
    public String getLanguage() {
        return language;
    }

    /**
     * Sets the programming language of this snippet.
     *
     * @param language the programming language to set
     */
    public void setLanguage(String language) {
        this.language = language;
    }

    /**
     * Gets the timestamp of when this snippet was created.
     * <p>
     * This field is not updatable after initial insertion, ensuring the creation
     * timestamp remains consistent.
     * </p>
     *
     * @return the creation timestamp
     */
    public LocalDateTime getCreatedAt() {
        return createdAt;
    }

    /**
     * Sets the creation timestamp of this snippet.
     * <p>
     * This method should generally be called only by the persistence framework
     * to initialize the creation time.
     * </p>
     *
     * @param createdAt the creation timestamp to set
     */
    public void setCreatedAt(LocalDateTime createdAt) {
        this.createdAt = createdAt;
    }

    /**
     * Gets the timestamp of the last update to this snippet.
     *
     * @return the update timestamp
     */
    public LocalDateTime getUpdatedAt() {
        return updatedAt;
    }

    /**
     * Sets the timestamp of the last update to this snippet.
     *
     * @param updatedAt the update timestamp to set
     */
    public void setUpdatedAt(LocalDateTime updatedAt) {
        this.updatedAt = updatedAt;
    }
}
